@font-face {
	font-family: "Bellefair";
	src: url(/assets/fonts/Bellefair-Regular.ttf);
}
@font-face {
	font-family: "Barlow Condensed";
	src: url(/assets/fonts/BarlowCondensed-Regular.ttf);
}
@font-face {
	font-family: "Barlow";
	src: url(/assets/fonts/Barlow-Regular.ttf);
}

/* -------------------------------------------- */
/* Custom properties                            */
/* -------------------------------------------- */
:root {
	/* colors */
	--color-dark: 230 35% 7%;
	--color-light: 231 77% 90%;
	--color-white: 0 0% 100%;

	/* font-sizes */
	--fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
	--fs-800: 3.5rem;
	--fs-700: 1.5rem;
	--fs-600: 1rem;
	--fs-500: 1.75rem;
	--fs-400: 0.9375rem;
	--fs-300: 1rem;
	--fs-200: 0.875rem;

	/* font-families */
	--ff-serif: "Bellefair", serif;
	--ff-sans-cond: "Barlow Condensed", sans-serif;
	--ff-sans-normal: "Barlow", sans-serif;
}

/* tablet size */
@media (min-width: 35em) {
	:root {
		--fs-800: 5rem;
		--fs-700: 2.5rem;
		--fs-600: 1.5rem;
		--fs-400: 1rem;
	}
}

/* desktop size */
@media (min-width: 45em) {
	:root {
		/* font-sizes */
		--fs-800: 6.25rem;
		--fs-700: 3.5rem;
		--fs-600: 2rem;
		--fs-400: 1.125rem;
		--fs-200: 0.875rem;
	}
}

/* -------------------------------------------- */
/* Reset                                        */
/* -------------------------------------------- */

/* Box sizing */
*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
	font-weight: 400;
}

body {
	font-family: var(--ff-sans-normal);
	line-height: 1.5;
	min-height: 100vh;
	display: grid;
	grid-template-rows: min-content 1fr;
	/* font-size: 62.5%; */
}

html {
	font-size: var(--fs-400);
	color: hsl(var(--color-white));
	background-color: hsl(var(--color-dark));
}

img,
picture {
	max-width: 100%;
	display: block;
}

input,
button,
textarea,
select {
	font: inherit;
}

/* remove animations for people who turned them off */
@media (prefers-reduced-motion: reduce) {
	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

/* =============================================================================================== */

/* -------------------------------------------- */
/* Utility classes                              */
/* -------------------------------------------- */

.flex {
	display: flex;
	gap: var(--gap, 1rem);
}

.grid {
	display: grid;
	gap: var(--gap, 1rem);
}

.d-block {
	display: block;
}

/* 
selecting everything but first child also not adding specificity!!! 
can be also done with: .flow > * + * {}
 */
.flow > *:where(:not(:first-child)) {
	margin-top: var(--flow-space, 1rem);
	/* outline: 1px solid red; */
}

.container {
	padding-inline: 2em;
	max-width: 80rem;
	margin-inline: auto;
}

.grid-container {
	text-align: center;
	border: 5px solid limegreen;
	display: grid;
	place-items: center;
	padding-inline: 1rem;
}

.grid-container * {
	max-width: 50ch;
}

@media (min-width: 45rem) {
	.grid-container {
		text-align: left;
		column-gap: var(--container-gap, 2rem);
		grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(
				2rem,
				1fr
			);
	}

	.grid-container > *:first-child {
		grid-column: 2;
		outline: 1px solid red;
	}

	.grid-container > *:last-child {
		grid-column: 3;
		outline: 1px solid orange;
	}

	.grid-container--home {
		padding-bottom: max(6rem, 20vh);
		align-items: end;
	}
}

.grid-container > *:first-child {
	outline: 1px solid red;
}

.grid-container > *:last-child {
	outline: 1px solid orange;
}

.sr-only {
	/* screen reader only */
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

/* colors */

.bg-dark {
	background-color: hsl(var(--color-dark));
}
.bg-accent {
	background-color: hsl(var(--color-light));
}
.bg-white {
	background-color: hsl(var(--color-white));
}

.text-dark {
	color: hsl(var(--color-dark));
}
.text-accent {
	color: hsl(var(--color-light));
}
.text-white {
	color: hsl(var(--color-white));
}

.asdf {
	flex-grow: 1;
	flex-direction: column;
}

/* typography */

.ff-serif {
	font-family: var(--ff-serif);
}
.ff-sans-cond {
	font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
	font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
	letter-spacing: 4.75px;
}
.letter-spacing-2 {
	letter-spacing: 2.7px;
}
.letter-spacing-3 {
	letter-spacing: 2.35px;
}

.uppercase {
	text-transform: uppercase;
}

.fs-900 {
	font-size: var(--fs-900);
}
.fs-800 {
	font-size: var(--fs-800);
}
.fs-700 {
	font-size: var(--fs-700);
}
.fs-600 {
	font-size: var(--fs-600);
}
.fs-500 {
	font-size: var(--fs-500);
}
.fs-400 {
	font-size: var(--fs-400);
}
.fs-300 {
	font-size: var(--fs-300);
}
.fs-200 {
	font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
	line-height: 1.1;
}

.numbered-title {
	font-family: var(--ff-sans-cond);
	font-style: var(--fs-500);
	text-transform: uppercase;
	letter-spacing: 4.72px;
}

.numbered-title span {
	margin-right: 0.5em;
	font-weight: 700;
	color: hsl(var(--color-light) / 0.25);
}

/* -------------------------------------------- */
/* Componets                                    */
/* -------------------------------------------- */

.large-button {
	font-size: 2rem;
	position: relative;
	z-index: 1;
	display: inline-grid;
	place-items: center;
	padding: 0 2rem;
	border-radius: 50%;
	aspect-ratio: 1;
	text-decoration: none;
}

.large-button::after {
	content: "";
	position: absolute;
	z-index: -1;
	background: hsl(var(--color-white) / 0.15);
	width: 100%;
	height: 100%;
	border-radius: 50%;
	opacity: 0;
	transition: opacity 500ms linear, 750ms ease-in-out;
}

/* animatons on hover, focus */
.large-button:hover::after,
.large-button:focus::after {
	opacity: 1;
	transform: scale(1.5);
}

.primary-navigation {
	--gap: 8rem;
	--underline-gap: 2rem;
	list-style: none;
	padding: 0;
	margin: 0;
}

.primary-navigation a {
	text-decoration: none;
}

.primary-navigation a > span {
	font-weight: 700;
	margin-right: 0.5em;
}

/* selecting every direct ascendant child */
.underline-indicators > * {
	cursor: pointer;
	padding: var(--underline-gap, 1rem) 0;
	border: 0;
	border-bottom: 0.2rem solid hsl(var(--color-white) / 0);
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
	border-color: hsl(var(--color-white) / 0.5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
	color: hsl(var(--color-white) / 1);
	border-color: hsl(var(--color-white) / 1);
}

.tab-list {
	--gap: 2rem;
}

.dot-indicators > * {
	cursor: pointer;
	padding: 0.5em;
	border: 0;
	border-radius: 50%;
	background-color: hsl(var(--color-white) / 0.15);
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
	background-color: hsl(var(--color-white) / 0.35);
}

.dot-indicators > .active,
.dot-indicators > [aria-selected="true"] {
	background-color: hsl(var(--color-white) / 1);
}

.number-indicators > * {
	cursor: pointer;
	padding: 1em 2em;
	aspect-ratio: 1/1;
	border: 2px solid hsl(var(--color-white) / 0.15);
	border-radius: 50%;
	background-color: hsl(var(--color-white) / 0);
	color: hsl(var(--color-white) / 1);
}

.number-indicators > *:hover,
.number-indicators > *:focus {
	border-color: hsl(var(--color-white) / 0.5);
}

.number-indicators > .active,
.number-indicators > [aria-selected="true"] {
	color: hsl(var(--color-dark));
	background-color: hsl(var(--color-white) / 1);
}
